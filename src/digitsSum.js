/**
 * Given number n (-1000000 <= n <= 1000000). Create a function that counts sum of all digits
 * @param {number} n - number
 * @returns {number}
 */
module.exports.digitsSum = function digitsSum(n) {
  // 1. Вызначаем абсалютнае значэнне n, каб зрабіць яго станоўчым
  return (
    Math.abs(n)

      // 2. Пераўтвараем лік у радок
      .toString()

      // 3. Разбіваем радок на масіў асобных сімвалаў (лічбаў)
      .split('')

      // 4. Выкарыстоўваем reduce для сумавання лічбаў
      .reduce(
        (sum, digit) =>
          // 5. Дадаем кожную лічбу, пераўтвараючы яе з радка ў лік
          sum + Number(digit),

        // 6. Пачатковая значэнне для сумы роўная 0
        0
      )
  );
};

//Math.abs(n) вяртае абсалютнае значэнне n, што азначае, што адмоўныя значэнні ператвараюцца ў станоўчыя. Гэта важна, паколькі сума лічбаў не павінна залежыць ад знака ліку
//Пасля таго як n становіцца абсалютным, toString() пераўтварае лік у радок. Напрыклад, 123 стане "123"
//split('') разбівае радок на масіў асобных сімвалаў (лічбаў). Для "123" атрымліваем ['1', '2', '3']
//reduce выкарыстоўваецца для таго, каб пераўтварыць масіў лічбаў у адно значэнне - суму ўсіх лічбаў
//sum у reduce захоўвае бягучую суму, а digit - гэта кожны элемент масіва (лічба ў выглядзе радка).
//Number(digit) пераўтварае кожны радковы элемент ў лік.
//0: Гэта пачатковая значэнне для сумы, якая ўказваецца ў reduce. Гэта забяспечвае, што сума пачынаецца з нуля.
